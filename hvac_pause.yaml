blueprint:
  name: Отопление окно 
  description: Приостанавливает работу системы отопления, вентиляции и кондиционирования воздуха при открытии окон/дверей; возобновляет последнее состояние после закрытия
  domain: automation
  source_url: https://github.com/bieskholodov/HA-HVAC-Pause-Blueprint/blob/main/hvac_pause.yaml
  input:
    climate_device:
      description: Климатический объект, используемый для контроля климата.
      name: Климатическое устройство
      selector:
        entity:
          domain:
          - climate
          multiple: false

    pause_delay:
      description: Пришло время подождать, прежде чем приостанавливать работу системы HVAC.
      name: Задержка паузы
      default:
        hours: 0
        minutes: 5
        seconds: 0
      selector:
        duration: {}
    resume_delay:
      description: Пришло время подождать, прежде чем возобновить работу системы HVAC после закрытия дверей и окон.
        закрыты.
      name: Задержка возобновления
      default:
        hours: 0
        minutes: 0
        seconds: 30
      selector:
        duration: {}
    timeout:
      description: Если установлено, система отопления, вентиляции и кондиционирования воздуха останется выключенной, если дверь/окно не были закрыты ранее.
        чтобы истекло значение тайм-аута. Установите значение 0, чтобы отключить тайм-аут.
      name: Тайм-аут (необязательно)
      default:
        hours: 0
        minutes: 0
        seconds: 0
      selector:
        duration: {}
    action_first:
      description: Если установлено значение «Вкл.», любые определенные «Действия при паузе» будут выполняться после
        пауза задержки и перед любыми другими действиями.
      name: Действие прежде всего
      selector:
        boolean: {}
    pause_action:
      description: Необязательное дополнительное действие, которое необходимо выполнить, когда объект климата приостановлен.
      name: Приостановить действие (необязательно)
      default: []
      selector:
        action: {}
    resume_action:
      description: Необязательное дополнительное действие, которое необходимо выполнить при возобновлении работы объекта климата.
      name: Возобновить действие (необязательно)
      default: []
      selector:
        action: {}
    timeout_action:
      description: Необязательное дополнительное действие, которое необходимо выполнить, если значение тайм-аута истекло.
      name: Действие по тайм-ауту (необязательно)
      default: []
      selector:
        action: {}
variables:
  action_first: !input action_first
  pause_action: !input pause_action
  resume_action: !input resume_action
  timeout_action: !input timeout_action
  climate_device: !input climate_device
  doors_windows: !input doors_windows
  timeout: !input timeout
  timeout_empty:
    hours: 0
    minutes: 0
    seconds: 0
  name_id: '{{ state_attr( climate_device ,''friendly_name'')|slugify ~ ''_snapshot''
    }}'
  button_entity: '{{ ''button.'' ~ name_id ~ ''_clear_hold'' }}'
mode: single
trigger:
- platform: state
  entity_id: !input doors_windows
  from: 'off'
  to: 'on'
  for: !input pause_delay
  id: group_open
condition:
- condition: not
  conditions:
  - condition: state
    entity_id: !input climate_device
    state: 'off'
action:
- choose:
  - conditions: '{{ pause_action is defined and action_first == true }}'
    sequence: !input pause_action
- service: scene.create
  data:
    scene_id: '{{ name_id ~ ''_snapshot'' }}'
    snapshot_entities: !input climate_device
- service: climate.set_hvac_mode
  target:
    entity_id: !input climate_device
  data:
    hvac_mode: 'off'
- choose:
  - conditions: '{{ pause_action is defined and action_first != true }}'
    sequence: !input pause_action
- if:
  - condition: template
    value_template: '{{ timeout != timeout_empty }}'
  then:
  - wait_for_trigger:
    - platform: state
      entity_id: !input doors_windows
      from: 'on'
      to: 'off'
      for: !input resume_delay
    continue_on_timeout: true
    timeout: !input timeout
  - if:
    - condition: template
      value_template: '{{ wait.trigger == none and timeout_action is defined}}'
    then:
    - sequence: !input timeout_action
    - stop: ''
  else:
  - wait_for_trigger:
    - platform: state
      entity_id: !input doors_windows
      from: 'on'
      to: 'off'
      for: !input resume_delay
    continue_on_timeout: false
- condition: not
  conditions:
  - condition: state
    entity_id: !input climate_device
    attribute: fan_mode
    state: 'on'
- condition: state
  entity_id: !input climate_device
  state: 'off'
- service: scene.turn_on
  target:
    entity_id: '{{ ''scene.'' ~ name_id ~ ''_snapshot'' }}'
- choose:
  - conditions:
    - condition: template
      value_template: '{{ ''ecobee'' in device_attr( climate_device ,''manufacturer'')
        |lower }}'
    - condition: template
      value_template: '{{ states(button_entity) != "unknown" }}'
    sequence:
    - delay:
        seconds: 1
    - service: button.press
      metadata: {}
      data: {}
      target:
        entity_id: '{{ button_entity }}'
- choose:
  - conditions: '{{ resume_action is defined }}'
    sequence: !input resume_action
